Use this code as an reference for proper api integration -

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Professional Stock Tracker</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.7.0/chart.min.js"></script>
    <style>
        :root {
            --primary-color: #2563eb;
            --secondary-color: #1e40af;
            --success-color: #059669;
            --danger-color: #dc2626;
            --background-color: #f8fafc;
            --card-background: #ffffff;
            --text-primary: #1e293b;
            --text-secondary: #64748b;
            --border-color: #e2e8f0;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
        }

        body {
            background-color: var(--background-color);
        }

        .dashboard {
            display: grid;
            grid-template-columns: 240px 1fr;
            min-height: 100vh;
        }

        /* Sidebar Styles */
        .sidebar {
            background: var(--card-background);
            border-right: 1px solid var(--border-color);
            padding: 1.5rem;
        }

        .logo {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            margin-bottom: 2rem;
        }

        .logo img {
            width: 32px;
            height: 32px;
        }

        .nav-item {
            padding: 0.75rem 1rem;
            margin: 0.25rem 0;
            border-radius: 0.5rem;
            cursor: pointer;
            color: var(--text-secondary);
            transition: all 0.2s;
        }

        .nav-item:hover {
            background: var(--background-color);
            color: var(--text-primary);
        }

        .nav-item.active {
            background: var(--primary-color);
            color: white;
        }

        /* Main Content Styles */
        .main-content {
            padding: 2rem;
        }

        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
        }

        .search-bar {
            display: flex;
            gap: 1rem;
            align-items: center;
        }

        .search-input {
            padding: 0.75rem 1rem;
            border: 1px solid var(--border-color);
            border-radius: 0.5rem;
            width: 300px;
            font-size: 0.875rem;
        }

        .filter-select {
            padding: 0.75rem 1rem;
            border: 1px solid var(--border-color);
            border-radius: 0.5rem;
            font-size: 0.875rem;
        }

        /* Stock Grid Styles */
        .stocks-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 1.5rem;
        }

        .stock-card {
            background: var(--card-background);
            border-radius: 1rem;
            padding: 1.5rem;
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
            transition: transform 0.2s, box-shadow 0.2s;
            cursor: pointer;
        }

        .stock-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        }

        .stock-header {
            display: flex;
            align-items: center;
            gap: 1rem;
            margin-bottom: 1rem;
        }

        .stock-logo {
            width: 40px;
            height: 40px;
            border-radius: 0.5rem;
            background: var(--background-color);
        }

        .stock-name {
            flex-grow: 1;
        }

        .stock-symbol {
            font-weight: 600;
            color: var(--text-primary);
        }

        .stock-company {
            font-size: 0.875rem;
            color: var(--text-secondary);
        }

        .stock-price {
            font-size: 1.5rem;
            font-weight: 600;
            margin: 0.5rem 0;
        }

        .stock-change {
            display: inline-block;
            padding: 0.25rem 0.75rem;
            border-radius: 1rem;
            font-size: 0.875rem;
            font-weight: 500;
        }

        .positive {
            background: rgba(5, 150, 105, 0.1);
            color: var(--success-color);
        }

        .negative {
            background: rgba(220, 38, 38, 0.1);
            color: var(--danger-color);
        }

        /* Modal Styles */
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0,0,0,0.5);
            z-index: 1000;
        }

        .modal-content {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: var(--card-background);
            padding: 2rem;
            border-radius: 1rem;
            width: 90%;
            max-width: 1000px;
            max-height: 90vh;
            overflow-y: auto;
        }

        .chart-container {
            height: 400px;
            margin: 2rem 0;
        }

        /* Loading and Error States */
        .loading {
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 2rem;
            color: var(--text-secondary);
        }

        .error {
            background: rgba(220, 38, 38, 0.1);
            color: var(--danger-color);
            padding: 1rem;
            border-radius: 0.5rem;
            margin: 1rem 0;
        }
    </style>
</head>
<body>
    <div class="dashboard">
        <!-- Sidebar -->
        <div class="sidebar">
            <div class="logo">
                <img src="/api/placeholder/32/32" alt="Logo">
                <h1>StockTracker</h1>
            </div>
            <nav>
                <div class="nav-item active">Dashboard</div>
                <div class="nav-item">Watchlist</div>
                <div class="nav-item">Markets</div>
                <div class="nav-item">News</div>
                <div class="nav-item">Settings</div>
            </nav>
        </div>

        <!-- Main Content -->
        <div class="main-content">
            <div class="header">
                <div class="search-bar">
                    <input type="text" class="search-input" placeholder="Search stocks..." id="searchInput">
                    <select class="filter-select" id="sortSelect">
                        <option value="marketCap">Market Cap</option>
                        <option value="price">Price</option>
                        <option value="change">% Change</option>
                        <option value="volume">Volume</option>
                    </select>
                </div>
            </div>

            <div id="errorContainer"></div>
            <div id="stocksGrid" class="stocks-grid"></div>
        </div>
    </div>

    <!-- Stock Detail Modal -->
    <div id="stockModal" class="modal">
        <div class="modal-content">
            <div id="modalContent"></div>
        </div>
    </div>

    <script>
        const API_KEY = '8EES4ER9A8UJQYLN';
        
        // Cache for storing API responses
        const cache = new Map();
        const CACHE_DURATION = 60000; // 1 minute

        // Top 200 stocks by market cap
        const stocksList = [
            { symbol: 'AAPL', name: 'Apple Inc.', sector: 'Technology' },
            { symbol: 'MSFT', name: 'Microsoft Corporation', sector: 'Technology' },
            { symbol: 'GOOGL', name: 'Alphabet Inc.', sector: 'Technology' },
            { symbol: 'AMZN', name: 'Amazon.com Inc.', sector: 'Consumer Cyclical' },
            { symbol: 'NVDA', name: 'NVIDIA Corporation', sector: 'Technology' },
            // ... Add more stocks here
        ];

        // Function to get cached data or fetch new data
        async function getStockData(symbol) {
            const now = Date.now();
            const cached = cache.get(symbol);
            
            if (cached && now - cached.timestamp < CACHE_DURATION) {
                return cached.data;
            }

            try {
                const response = await fetch(
                    `https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${symbol}&apikey=${API_KEY}`
                );
                const data = await response.json();

                if (data['Global Quote']) {
                    cache.set(symbol, {
                        timestamp: now,
                        data: data['Global Quote']
                    });
                    return data['Global Quote'];
                }
                throw new Error(data['Note'] || 'Failed to fetch stock data');
            } catch (error) {
                throw error;
            }
        }

        // Function to create stock card
        function createStockCard(stock, quoteData) {
            const price = parseFloat(quoteData['05. price']);
            const change = parseFloat(quoteData['09. change']);
            const changePercent = parseFloat(quoteData['10. change percent']);
            
            return `
                <div class="stock-card" onclick="showStockDetails('${stock.symbol}')">
                    <div class="stock-header">
                        <img class="stock-logo" src="/api/placeholder/40/40" alt="${stock.symbol} logo">
                        <div class="stock-name">
                            <div class="stock-symbol">${stock.symbol}</div>
                            <div class="stock-company">${stock.name}</div>
                        </div>
                    </div>
                    <div class="stock-price">$${price.toFixed(2)}</div>
                    <div class="stock-change ${change >= 0 ? 'positive' : 'negative'}">
                        ${change >= 0 ? '+' : ''}${changePercent.toFixed(2)}%
                    </div>
                </div>
            `;
        }

        // Function to show stock details modal
        async function showStockDetails(symbol) {
            const modal = document.getElementById('stockModal');
            const modalContent = document.getElementById('modalContent');
            
            modal.style.display = 'block';
            modalContent.innerHTML = '<div class="loading">Loading detailed data...</div>';

            try {
                const [quoteData, historicalData] = await Promise.all([
                    getStockData(symbol),
                    fetch(`https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${symbol}&apikey=${API_KEY}`)
                        .then(res => res.json())
                ]);

                const stock = stocksList.find(s => s.symbol === symbol);
                
                modalContent.innerHTML = `
                    <h2>${stock.name} (${symbol})</h2>
                    <div class="stock-details">
                        <div class="chart-container">
                            <canvas id="priceChart"></canvas>
                        </div>
                        <!-- Add more detailed information here -->
                    </div>
                `;

                // Initialize chart (if historical data is available)
                if (historicalData['Time Series (Daily)']) {
                    const chartData = Object.entries(historicalData['Time Series (Daily)'])
                        .slice(0, 30)
                        .reverse();

                    new Chart(document.getElementById('priceChart'), {
                        type: 'line',
                        data: {
                            labels: chartData.map(([date]) => date),
                            datasets: [{
                                label: 'Stock Price',
                                data: chartData.map(([, data]) => data['4. close']),
                                borderColor: '#2563eb',
                                tension: 0.1
                            }]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false
                        }
                    });
                }

            } catch (error) {
                modalContent.innerHTML = `<div class="error">${error.message}</div>`;
            }
        }

        // Close modal when clicking outside
        window.onclick = function(event) {
            const modal = document.getElementById('stockModal');
            if (event.target === modal) {
                modal.style.display = 'none';
            }
        }

        // Initialize the dashboard
        async function initializeDashboard() {
            const stocksGrid = document.getElementById('stocksGrid');
            stocksGrid.innerHTML = '<div class="loading">Loading stocks...</div>';

            try {
                const stockData = await Promise.all(
                    stocksList.slice(0, 10).map(async (stock) => {
                        try {
                            const quoteData = await getStockData(stock.symbol);
                            return createStockCard(stock, quoteData);
                        } catch (error) {
                            console.error(`Error fetching ${stock.symbol}:`, error);
                            return '';
                        }
                    })
                );

                stocksGrid.innerHTML = stockData.join('');
            } catch (error) {
                document.getElementById('errorContainer').innerHTML = `
                    <div class="error">Failed to load stocks: ${error.message}</div>
                `;
            }
        }

        // Initialize the dashboard
        initializeDashboard();
    </script>
</body>
</html>
